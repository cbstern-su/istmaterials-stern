* {font-family: sans-serif;}
.page-container {width: 1024px; margin: 0 auto; padding: 0;}
#logo {width: 150px; height: 150px; float: left; text-align: center;}
#search {width: 20em; height: 4em; float: right;}
#search input {width: 17em; height: 3em; float: left;}
#search-btn {width: 3em; height: 2.5em; background-color: #ccc; float: right; padding: 0 1em; text-align: center; float: left; margin-left: 6px;}
#search-btn i {padding: 25% 0;}
#top-panel {margin: 1em 1.5em 1em 1em;}
#top-banner {background:url(images/W7-lab-banner-background.png) no-repeat;height:320px;}
#banner-heading {background-color: #fff; margin-left:2em; margin-top: 4em; width: 30%; padding: 0.5em; display: inline-block;}
#banner-list {padding: 1em;}
#page-center {margin: 0 2em 0 0;}
#bottom-row {margin: 1em 0; border-bottom:3px solid #666;}
#social {padding-left: 1em;}
.grid-row {padding: 1em 0 1em 1em;}
#extra-img {float: left; padding: 2em 1em;}
#extra-img img {float: left;}
#extra-img p {display: inline-block; margin-left: 1em;}
li.spaced-list {padding-bottom: 1.5em;}
header {height: 8em; margin: 1em 0; padding: 0;}
nav {height: 26px; margin: 1em 0; padding: 10px 0 20px 10px; background-color: #ccc; font-size: 32px;}
.padded {background-color: #ccc; padding: 1em; margin: .75em 0;}
#center-right {padding: 1em 0 0 1em; margin: 0; margin-left: 1em;}
#carousel .col {margin: 1em 0 1em 1em;}

/* 
Review the rest of this CSS file and add comments. The goal of the review is to give you an idea of how this file can be
reused for future class and individual project work.

The comments should detail
- What does the class do?
- What will be a good use case of this class?

.container {
  margin: 0 auto;
  width: 1200px;
}
This class would indicate that the contianer occupies a 1200px width on the page with a default height. The margin is set as an automatic dimension to distance the container no amount of additional space.
 
.row {
  display: flex;
  flex-flow: row wrap;
}
This class establishes the flex box protocol as the row follows the text direction and wraps to a new row according the the width of the flex box.

.col {
  display: flex;
}
This class sets the parent container of the flex box that all other items with be contained within. Establishing this class is pivotal to continue with flex box use for a responsive and centered-horizontal display.

.col-1 {
  flex: 1;
}
This .col class sets the flex as "1" to create a child flex box item to serve as the model dimension for other columns to work with the container space respectively and responsively.

.col-2 {
  flex: 2;
}
In accordance with the flex container space used bt .col-1, this class instructs this child flex item to have double the width of the .col-1 and work with the container space responsively.

.col-3 {
  flex: 3;
}
Similarly to .col-2, this class instructs this child flex iterm to have triple the width of .col-1 while still working with the container space (that also contains .col-1 and .col-2) responsively for a respective allocation of browser space and even display.

.responsive {
  width: 100%;
  height: auto;
}
This class instructs its element to work with the browser space given, no matter the device, and occupy 100% of what is available. The .responsive class might be useful for multi-functional, responsive web design that takes full advantage of the white space on a browser.

.text-center {
  text-align: center;
}
This class defines the alignment of the text as noted by the direction specified. All text within an element with this class will fall in the center of the page.

.text-right {
  text-align: right;
}
Similarly to the last class, this text will align straight on the right-hand side and continue until beginning the next line again, reading left-to-right but aligning against the right wall of the container.

.card {
  border: 1px solid #ccc;
}
This class might be used to set a border around a specific container alone. The thickness is only 1px and the color is gray, so it's a subtle distinction to separate and square off a container.

.rounded-border {
  border-radius: 5px;
}
This class helps to add a bit of added styling to the kind of border selected as it has rounded corners with a property set for 5x distinguishing its level of roundedness.

.m-1 {
  margin: 10px;
}
This class would be helpful in setting specific containers with a larger margin to space and distance it further from others (on all sides: right, left, top, bottom),increasing white space and decrowding the page.

.mt-1 {
  margin-top: 10px;
}
This class deffers from the previous because it solely alters the top margin, or the distance between the container and the upper edge of the page, considering the box model. This might be useful for a header.

.ml-1 {
  margin-left: 10px;
}
This class would do the same as the last, but specifically control the distance between the container and the left edge of the page, considering the box model. 

.mr-1 {
  margin-right: 10px;
}
This class would do the same as the last, but specifically control the distance between the container and the right edge of the page, considering the box model.

.mb-1 {
  margin-bottom: 10px;
}
This class would do the same as the last, but specifically control the distance between the container and the bottom edge of the page, considering the box model. This might be useful for a footer.

.p-1 {
  padding: 10px;
}
Following the layout of the box model, this class would display a 10px padding of space between the container of content and a border (on all sides: right, left, top, bottom).

.pt-1 {
  padding-top: 10px;
}
What distinguishes this class from the last is that the padding would only input 10px of space on the upper portion of a container between its border.

.pl-1 {
  padding-left: 10px;
}
Like the previous class, this would insert 10px of space as well, but only on the left side of a container between its border.

.pr-1 {
  padding-right: 10px;
}
Like the previous class, this would insert 10px of space as well, but only on the right side of a container between its border.

.pb-1 {
  padding-bottom: 10px;
}
Like the previous class, this would insert 10px of space as well, but only on the lower portion of a container between its border.
#/